version: '2.1'
volumes:
  dbbackups:
  postgis-data:

services:

  db:
    image: kartoza/postgis:11.0-2.5
    volumes:
      - postgis-data:/var/lib/postgresql
      - dbbackups:/backups
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=gis
      - POSTGRES_USER=docker
      - POSTGRES_PASS=docker
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the three specified below
      #- POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology
    ports:
      - 5434:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  dbbackups:
    image: kartoza/pg-backup:11.0
    hostname: pg-backups
    volumes:
      - dbbackups:/backups
    links:
      - db:db
    environment:
      - DUMPPREFIX=demo
      - PGUSER=docker
      - PGPASSWORD=docker
      - PGDATABASE=gis
      - PGPORT=5432
      - PGHOST=db
    restart: on-failure
    depends_on:
      db:
        condition: service_healthy

  stgrest:
    image: pg_local
    ports:
      - "3000:3000"
    links:
      - postgres:postgres
    environment:
      PGRST_DB_URI: postgres://app_user:password@postgres:5432/app_db
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: app_user

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password

  biserver:
    image: zhicwu/biserver-ce${BI_IMAGE_TAG}
    hostname: ${SERVER_HOST}
    container_name: ${BI_CONTAINER_NAME}
    command: biserver
    ports:
      - "${SERVER_PROM_PORT}:1234"
      - "${SERVER_HTTP_PORT}:8080"
      - "${SERVER_AJP_PORT}:8009"
    volumes:
      - ./ext:/bi-ext:ro
      - ./data/.pentaho:/biserver-ce/.pentaho:rw
      - ./data/hsqldb:/biserver-ce/data/hsqldb:rw
      - ./data/logs:/biserver-ce/tomcat/logs:rw
      - ./data/repository:/biserver-ce/pentaho-solutions/system/jackrabbit/repository:rw
      - ./data/tmp:/biserver-ce/tmp:rw
    environment:
      APPLY_PATCHES: Y
      BI_JAVA_OPTS: '${BI_JAVA_OPTS}'
      HOST_USER_ID: ${HOST_USER_ID}
      STORAGE_TYPE: ${STORAGE_TYPE}
      PDI_HADOOP_CONFIG: ${PDI_HADOOP_CONFIG}
      PDI_MAX_LOG_LINES: ${PDI_MAX_LOG_LINES}
      PDI_MAX_LOG_TIMEOUT: ${PDI_MAX_LOG_TIMEOUT}
      PDI_MAX_OBJ_TIMEOUT: ${PDI_MAX_OBJ_TIMEOUT}
      SERVER_NAME: ${SERVER_NAME}
      SERVER_HOST: ${SERVER_HOST}
      SERVER_PORT: ${SERVER_EXT_PORT}
    # still need below even using docker engine 1.12
    # see more at https://github.com/docker/docker/issues/21051 and https://docs.docker.com/engine/security/seccomp/
    security_opt:
      - seccomp:unconfined
    # https://fabiokung.com/2014/03/13/memory-inside-linux-containers/
    #mem_limit: 5000M
    #memswap_limit: 5000M
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    restart: always
